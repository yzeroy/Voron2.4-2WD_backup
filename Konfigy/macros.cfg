
[gcode_macro START_PRINT]
gcode: 
	{% set area_start = params.AREA_START | default("0,0") %}
	{% set coordinates = area_start.split(',') %}
	{% set BED_TEMP = params.BED_TEMP|int %}
	{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|int %}
	{% set PRINTHEAD_TEMP = params.PRINTHEAD_TEMP|default(200)|int %}
	{% set x_min_S = coordinates[0] | int %}
	{% set y_min_S = coordinates[1] | int %}
	SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=extruder_t3 VALUE={PRINTHEAD_TEMP}
	SET_GCODE_VARIABLE MACRO=LOAD_FILAMENT VARIABLE=extruder_t2 VALUE={PRINTHEAD_TEMP}
	SET_GCODE_VARIABLE MACRO=UNLOAD_FILAMENT VARIABLE=extruder_t1 VALUE={PRINTHEAD_TEMP}
	SET_GCODE_VARIABLE MACRO=PRIME_LINE VARIABLE=pos_x VALUE={x_min_S}
	SET_GCODE_VARIABLE MACRO=PRIME_LINE VARIABLE=pos_y VALUE={y_min_S}
	M107
	M190 S{BED_TEMP}
	M104 S160
	G90
	G80
	BED_MESH_CALIBRATE PROFILE=default AREA_START={params.AREA_START|default("0,0")} AREA_END={params.AREA_END|default("0,0")}
	BED_MESH_PROFILE LOAD=default
	M109 S{EXTRUDER_TEMP}
	SET_GCODE_OFFSET Z=0.0
	PRIME_LINE

[gcode_macro vymena_trysky]
gcode: 
	G28
	G1 X120 Y0 f3000
	G1 Z200 f5000

[gcode_macro M600]
variable_runout: 0
gcode: 
	PAUSE
	UNLOAD_FILAMENT

[delayed_gcode clear_display]
initial_duration: 0.0
gcode: 
	M117

[gcode_macro PAUSE]
rename_existing: PAUSE_BASE
variable_extrude: 1.0
gcode: 
	{% set E = params.E|default(1)|float %}
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	SET_GCODE_VARIABLE MACRO=M600 VARIABLE=runout VALUE=0
	{% if printer.idle_timeout.state|string != "Printing" and not printer.pause_resume.is_paused %}
	{action_respond_info("Neprobíhá tisk")}
	{% else %}
	{% if act_z < (max_z - 2.0) %}
	{% set z_safe = 2.0 %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	PAUSE_BASE
	G91
	{% if printer.extruder.can_extrude|lower == 'true' %}
	G1 E-{E} F2100
	{% else %}
	{action_respond_info("Neni dostatecna teplota")}
	{% endif %}
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000
	{% endif %}

[gcode_macro RESUME]
description: Pokracovat v tisku
rename_existing: RESUME_BASE
variable_extruder_t3: 200
gcode: 
	{% set E = params.E|default(0.5)|float %}
	{% if printer.extruder.temperature >= (extruder_t3) - 5 %}
	G91
	G1 E-{E} F2100
	G90
	{% else %}
	{action_respond_info("Neni dostatecna teplota")}
	M109 S{extruder_t3}
	G91
	G1 E-{E} F2100
	G90
	{% endif %}
	RESUME_BASE

[gcode_macro LOAD_FILAMENT]
variable_extruder_t2: 200
gcode: 
	{% if printer.extruder.temperature < (extruder_t2) %}
	{action_respond_info("NENI DOSTATECNA TEPLOTA TRYSKY, NAHRIVAM")}
	M117 Nahrivam na {extruder_t2}C
	M109 S{extruder_t2}
	{% endif %}
	M300
	M117 Navadim filament...
	G92 E0.0
	G91
	G1 E40 F400
	G1 E30 F800
	G1 E80 F300
	G90
	G92 E0.0
	M300 S100 P500
	M400
	M117 Filament naveden...
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5
	RESUME

[gcode_macro UNLOAD_FILAMENT]
variable_extruder_t1: 200
gcode: 
	{% if printer.extruder.temperature < (extruder_t1) %}
	{action_respond_info("NENI DOSTATECNA TEPLOTA TRYSKY, NAHRIVAM")}
	M117 Nahrivam na {extruder_t1}C
	M109 S{extruder_t1}
	{% endif %}
	SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=0
	M117 Vytahuji filament...
	G92 E0.0
	G91
	G1 E4 F700
	G1 E-80 F2500
	G90
	G92 E0.0
	M400
	M117 Prosim vymen filament!
	SET_FILAMENT_SENSOR SENSOR=fsensor ENABLE=1
	M300 S100 P500
	UPDATE_DELAYED_GCODE ID=clear_display DURATION=5

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
variable_parameter_area_start: 0,0
variable_parameter_area_end: 0,0
variable_mesh_area_offset: 5.0
variable_probe_samples: 2
variable_min_probe_count: 4
variable_probe_count_scale_factor: 1.0
variable_enable_reference_index: False
gcode: 
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	M401
	{% if params.AREA_START and params.AREA_END %}
	{% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
	{% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
	{% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
	{% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
	{% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
	
	{% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}
	
	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	{% else %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% endif %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}
	
	
	{% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
	{% if area_min_x - mesh_area_offset >=  safe_min_x %}
	{% set area_min_x = area_min_x - mesh_area_offset %}
	{% else %}
	{% set area_min_x = safe_min_x %}
	{% endif %}
	
	{% if area_min_y - mesh_area_offset >=  safe_min_y %}
	{% set area_min_y = area_min_y - mesh_area_offset %}
	{% else %}
	{% set area_min_y = safe_min_y %}
	{% endif %}
	
	{% if area_max_x + mesh_area_offset <=  safe_max_x %}
	{% set area_max_x = area_max_x + mesh_area_offset %}
	{% else %}
	{% set area_max_x = safe_max_x %}
	{% endif %}
	
	{% if area_max_y + mesh_area_offset <=  safe_max_y %}
	{% set area_max_y = area_max_y + mesh_area_offset %}
	{% else %}
	{% set area_max_y = safe_max_y %}
	{% endif %}
	
	{% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
	{% if meshPointX < min_probe_count %}
	{% set meshPointX = min_probe_count %}
	{% endif %}
	{% if meshPointX > meshMaxPointX %}
	{% set meshPointX = meshMaxPointX %}
	{% endif %}
	
	{% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
	{% if meshPointY < min_probe_count %}
	{% set meshPointY = min_probe_count %}
	{% endif %}
	{% if meshPointY > meshMaxPointY %}
	{% set meshPointY = meshMaxPointY %}
	{% endif %}
	
	{% set algorithm = "lagrange" %}
	{% if "algorithm" in bedMeshConfig and meshPointX >=4 and meshPointY >=4 %}
	{% set algorithm = bedMeshConfig.algorithm %}
	{% endif %}
	
	{% if enable_reference_index %}
	{% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
	{% else %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	M401
	{% if params.AREA_START and params.AREA_END %}
	{% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
	{% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
	{% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
	{% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
	{% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
	
	{% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}
	
	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	{% else %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% endif %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}
	
	
	{% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
	{% if area_min_x - mesh_area_offset >=  safe_min_x %}
	{% set area_min_x = area_min_x - mesh_area_offset %}
	{% else %}
	{% set area_min_x = safe_min_x %}
	{% endif %}
	
	{% if area_min_y - mesh_area_offset >=  safe_min_y %}
	{% set area_min_y = area_min_y - mesh_area_offset %}
	{% else %}
	{% set area_min_y = safe_min_y %}
	{% endif %}
	
	{% if area_max_x + mesh_area_offset <=  safe_max_x %}
	{% set area_max_x = area_max_x + mesh_area_offset %}
	{% else %}
	{% set area_max_x = safe_max_x %}
	{% endif %}
	
	{% if area_max_y + mesh_area_offset <=  safe_max_y %}
	{% set area_max_y = area_max_y + mesh_area_offset %}
	{% else %}
	{% set area_max_y = safe_max_y %}
	{% endif %}
	
	{% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
	{% if meshPointX < min_probe_count %}
	{% set meshPointX = min_probe_count %}
	{% endif %}
	{% if meshPointX > meshMaxPointX %}
	{% set meshPointX = meshMaxPointX %}
	{% endif %}
	
	{% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
	{% if meshPointY < min_probe_count %}
	{% set meshPointY = min_probe_count %}
	{% endif %}
	{% if meshPointY > meshMaxPointY %}
	{% set meshPointY = meshMaxPointY %}
	{% endif %}
	
	{% set algorithm = "lagrange" %}
	{% if "algorithm" in bedMeshConfig and meshPointX >=4 and meshPointY >=4 %}
	{% set algorithm = bedMeshConfig.algorithm %}
	{% endif %}
	
	{% if enable_reference_index %}
	{% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
	{% else %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% endif %}
	M402

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode: 
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	TURN_OFF_HEATERS
	G91
	G1 Z1 F400
	G1 E-2 Z2 F2400
	{% if act_z < (max_z - 10.0) %}
	G1 Z9 F400
	{% endif %}
	G90
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	G1 X1 Y{printer.toolhead.axis_maximum.y  - 5} F5000
	M106 S0
	M84 X Y Z E

[gcode_macro END_PRINT]
gcode: 
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	TURN_OFF_HEATERS
	G91
	G1 Z1 F400
	G1 E-2 Z2 F2400
	{% if act_z < (max_z - 10.0) %}
	G1 Z9 F400
	{% endif %}
	G90
	G0 X1 Y240 F4000
	M106 S0
	M104 S0
	M140 S0
	M84 X Y E
	M300 S100 P500
	BED_MESH_CLEAR

[gcode_macro PRIME_LINE]
variable_pos_x: 2
variable_pos_y: 2
gcode: 
	{% set pos_min_x = pos_x|float %}
	{% set pos_max_x_safe = printer.toolhead.axis_maximum.x %}
	{% set pos_max_x = pos_min_x|float + 80 %}
	{% set pos_min_y = pos_y|float - 2.2 %}
	{% set pos_min_y_safe = pos_min_y|float - 3 %}
	M204 S5000
	G92 E0.0
	{% if pos_min_y_safe < 3 %}
	{% set pos_x = 3 %}
	{% set pos_y = 3 %}
	{% elif pos_max_x > pos_max_x_safe - 15 %}
	{% set pos_x = 3 %}
	{% set pos_y = 3 %}
	{% endif %}
	G1 X{pos_x} Y{pos_y - 2} Z0.4 F10000
	G1 X{pos_x + 80} E12.0 F500.0
	G1 Y{pos_y} F500
	G1 X{pos_x - 5} E20 F500.0
	G1 Z0.02 F500
	G1 X{pos_x} F5000
	G92 E0.0
	G10
	G92 E0
	G1 Z2 F2000
	M204 S5000

[gcode_macro G80]
gcode: 
	G28
	quad_gantry_level

[gcode_macro reset]
gcode: 
	RESTART


[gcode_macro CUSTOM_HOMING]
gcode: 
	SAVE_GCODE_STATE NAME=CUSTOM_HOMING_state
	{% set do_x = false %}
	{% set do_y = false %}
	{% set do_z = false %}
	
	
	{% if params.X is defined %}
	{% set do_x = true %}
	{% endif %}
	
	{% if params.Y is defined %}
	{% set do_y = true %}
	{% endif %}
	
	{% if params.Z is defined %}
	{% set do_z = true %}
	{% endif %}
	
	{% if do_x == false and do_y == false and do_z == false %}
	G009928 Z
	{% endif %}
	
	{% set Z_state = true if not 'z' in printer.toolhead.homed_axes%}
	
	{% if Z_state == true %}
	SET_KINEMATIC_POSITION Z=0
	{% endif %}
	G91
	G1 Z10 F1200
	G90
	
	{% if do_x or do_y%}
	RESPOND PREFIX="info" MSG="Homing {"X" if do_x}{"Y" if do_y}{"Z" if do_z}"
	{% if do_x %}
	G91
	SET_KINEMATIC_POSITION X=0
	G1 X.005 Y.005
	G4 P150
	G90
	SENSORLESS_HOME_X
	G0 X150 F5500
	{% endif %}
	{% if do_y %}
	G91
	SET_KINEMATIC_POSITION Y=0
	G1 X.005 Y.005
	G4 P150
	G90
	SENSORLESS_HOME_Y
	G0 Y150 F5500
	{% endif %}
	{% endif %}
	
	{% if do_z %}
	G009928 Z
	{% endif %}
	
	RESTORE_GCODE_STATE NAME=CUSTOM_HOMING_state

[gcode_macro G28]
rename_existing: G009928
gcode: 
	CUSTOM_HOMING{" X=1" if params.X is defined}{" Y=1" if params.Y is defined}{" Z=1" if params.Z is defined}

[gcode_macro SENSORLESS_HOME_X]
gcode: 
	{% set HOME_CUR = 0.55 %}
	{% set driver_config = printer.configfile.settings['tmc5160 stepper_x'] %}
	{% set RUN_CUR = driver_config.run_current %}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
	G4 P2000
	G009928 X
	G90
	G1 X60 F7000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CUR}

[gcode_macro SENSORLESS_HOME_Y]
gcode: 
	{% set HOME_CUR = 0.55 %}
	{% set driver_config = printer.configfile.settings['tmc5160 stepper_y'] %}
	{% set RUN_CUR = driver_config.run_current %}
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
	G4 P2000
	G009928 Y
	G90
	G1 y20 F7000
	SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CUR}

[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode: 
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=1 BLUE=1 Index=1 TRANSMIT=1 SYNC=1
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 Index=2 TRANSMIT=1 SYNC=1
	SET_LED LED=fysetc_mini12864 RED=1 GREEN=0 BLUE=0 Index=3 TRANSMIT=1 SYNC=1

[gcode_macro M300]
gcode: 
	{% set S = params.S|default(100)|int %}
	{% set P = params.P|default(800)|int %}
	SET_PIN PIN=_BEEPER_pin VALUE={S}
	G4 P{P}
	SET_PIN PIN=_BEEPER_pin VALUE=0