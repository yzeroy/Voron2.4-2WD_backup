[gcode_macro G28]
rename_existing: G009928
gcode: 
  {% if params.X is defined or params.Y is defined or params.Z is defined %}
     _Z_UP
    {% if params.X is defined %}
    	SENSORLESS_HOME_X
        M400
	{% endif %}
	{% if params.Y is defined %}
    	SENSORLESS_HOME_Y
        M400
	{% endif %}
	{% if params.Z is defined %}
        SENSORLESS_HOME_Y
        M400
        SENSORLESS_HOME_X
        M400
        G009928 Z
	{% endif %}
  {% else %}
  G009928 Z
  {% endif %} 
  
[homing_override]
axes: z
set_position_z: -5
gcode: 
	SET_KINEMATIC_POSITION Z=0
	G0 Z10 F500
	{% if not 'y' in printer.toolhead.homed_axes %}
    	SENSORLESS_HOME_Y
    	G0 Y150 F5500
	{% endif %}
    	{% if not 'x' in printer.toolhead.homed_axes %}
    	G0 Y150 F5500
    	SENSORLESS_HOME_X
	{% endif %}
    M401
    G0 X175 Y175 F8000
	G009928 Z
    G0 Z15 F500
    M402
	PARK

[gcode_macro _Z_UP]
gcode:
    SET_KINEMATIC_POSITION Z=0
	G91
	G0 Z10 F700
	G90

#	CUSTOM_HOMING{" X=1" if params.X is defined}{" Y=1" if params.Y is defined}{" Z=1" if params.Z is defined}
#   M400


[gcode_macro SENSORLESS_HOME_X]
gcode: 
	{% set HOME_CUR = 0.5 %}
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}

	G4 P2000
	G009928 X
	G90
    G4 P1000
    G0 X30 F6000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro SENSORLESS_HOME_Y]
gcode: 
	{% set HOME_CUR = 0.5 %}
	{% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CUR}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CUR}
	G4 P2000
	G009928 Y
	G90
    G4 P1000
    G0 Y150 F6000
	SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[delayed_gcode clear_display]
initial_duration: 0.0
gcode: 
	M117
[gcode_macro vymena_trysky]
gcode: 
	G28
	G1 X120 Y0 f3000
	G1 Z200 f5000

    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode: 
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set max_x = printer.toolhead.axis_maximum.x|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	TURN_OFF_HEATERS
	G91
	G1 Z1 F400
	G1 E-2 Z2 F2400
	{% if act_z < (max_z - 10.0) %}
	G1 Z9 F400
	{% endif %}
	G90
	CLEAR_PAUSE
	SDCARD_RESET_FILE
	G0 X{printer.toolhead.axis_maximum.x  - 5} Y{printer.toolhead.axis_maximum.y  - 5} F18000
	M106 S0
	M84 X Y Z E

[gcode_macro END_PRINT]
gcode: 
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	TURN_OFF_HEATERS
	G91
	G1 Z1 F400
	G1 E-2 Z2 F2400
	{% if act_z < (max_z - 10.0) %}
	G1 Z9 F400
	{% endif %}
	G90
	G0 X{printer.toolhead.axis_maximum.x  - 5} Y{printer.toolhead.axis_maximum.y  - 5} F18000
	M106 S0
	M104 S0
	M140 S0
	M84 X Y E
	M300 S100 P500
	BED_MESH_CLEAR
    
[gcode_macro M600]
gcode: 
	PAUSE
	UNLOAD_FILAMENT


[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
variable_parameter_area_start: 0,0
variable_parameter_area_end: 0,0
variable_mesh_area_offset: 5.0
variable_probe_samples: 2
variable_min_probe_count: 4
variable_probe_count_scale_factor: 1.0
variable_enable_reference_index: False
gcode: 
	{% if printer.toolhead.homed_axes != "xyz" %}
	G28
	M401
	{% if params.AREA_START and params.AREA_END %}
	{% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
	{% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
	{% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
	{% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
	{% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
	
	{% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}
	
	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	{% else %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% endif %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}
	
	
	{% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
	{% if area_min_x - mesh_area_offset >=  safe_min_x %}
	{% set area_min_x = area_min_x - mesh_area_offset %}
	{% else %}
	{% set area_min_x = safe_min_x %}
	{% endif %}
	
	{% if area_min_y - mesh_area_offset >=  safe_min_y %}
	{% set area_min_y = area_min_y - mesh_area_offset %}
	{% else %}
	{% set area_min_y = safe_min_y %}
	{% endif %}
	
	{% if area_max_x + mesh_area_offset <=  safe_max_x %}
	{% set area_max_x = area_max_x + mesh_area_offset %}
	{% else %}
	{% set area_max_x = safe_max_x %}
	{% endif %}
	
	{% if area_max_y + mesh_area_offset <=  safe_max_y %}
	{% set area_max_y = area_max_y + mesh_area_offset %}
	{% else %}
	{% set area_max_y = safe_max_y %}
	{% endif %}
	
	{% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
	{% if meshPointX < min_probe_count %}
	{% set meshPointX = min_probe_count %}
	{% endif %}
	{% if meshPointX > meshMaxPointX %}
	{% set meshPointX = meshMaxPointX %}
	{% endif %}
	
	{% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
	{% if meshPointY < min_probe_count %}
	{% set meshPointY = min_probe_count %}
	{% endif %}
	{% if meshPointY > meshMaxPointY %}
	{% set meshPointY = meshMaxPointY %}
	{% endif %}
	
	{% set algorithm = "lagrange" %}
	{% if "algorithm" in bedMeshConfig and meshPointX >=4 and meshPointY >=4 %}
	{% set algorithm = bedMeshConfig.algorithm %}
	{% endif %}
	
	{% if enable_reference_index %}
	{% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
	{% else %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	M401
	{% if params.AREA_START and params.AREA_END %}
	{% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
	{% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
	{% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
	{% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
	{% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
	
	{% set area_min_x = params.AREA_START.split(",")[0]|float %}
	{% set area_min_y = params.AREA_START.split(",")[1]|float %}
	{% set area_max_x = params.AREA_END.split(",")[0]|float %}
	{% set area_max_y = params.AREA_END.split(",")[1]|float %}
	
	{% if bedMeshConfig.probe_count.split(",")|length == 2 %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
	{% else %}
	{% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% set meshPointY = bedMeshConfig.probe_count.split(",")[0]|int %}
	{% endif %}
	
	{% set meshMaxPointX = meshPointX %}
	{% set meshMaxPointY = meshPointY %}
	
	
	{% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
	{% if area_min_x - mesh_area_offset >=  safe_min_x %}
	{% set area_min_x = area_min_x - mesh_area_offset %}
	{% else %}
	{% set area_min_x = safe_min_x %}
	{% endif %}
	
	{% if area_min_y - mesh_area_offset >=  safe_min_y %}
	{% set area_min_y = area_min_y - mesh_area_offset %}
	{% else %}
	{% set area_min_y = safe_min_y %}
	{% endif %}
	
	{% if area_max_x + mesh_area_offset <=  safe_max_x %}
	{% set area_max_x = area_max_x + mesh_area_offset %}
	{% else %}
	{% set area_max_x = safe_max_x %}
	{% endif %}
	
	{% if area_max_y + mesh_area_offset <=  safe_max_y %}
	{% set area_max_y = area_max_y + mesh_area_offset %}
	{% else %}
	{% set area_max_y = safe_max_y %}
	{% endif %}
	
	{% set meshPointX = (meshPointX * (area_max_x - area_min_x) / (safe_max_x - safe_min_x) * probe_count_scale_factor)|round(0)|int %}
	{% if meshPointX < min_probe_count %}
	{% set meshPointX = min_probe_count %}
	{% endif %}
	{% if meshPointX > meshMaxPointX %}
	{% set meshPointX = meshMaxPointX %}
	{% endif %}
	
	{% set meshPointY = (meshPointY * (area_max_y -area_min_y ) / (safe_max_y - safe_min_y) * probe_count_scale_factor )|round(0)|int %}
	{% if meshPointY < min_probe_count %}
	{% set meshPointY = min_probe_count %}
	{% endif %}
	{% if meshPointY > meshMaxPointY %}
	{% set meshPointY = meshMaxPointY %}
	{% endif %}
	
	{% set algorithm = "lagrange" %}
	{% if "algorithm" in bedMeshConfig and meshPointX >=4 and meshPointY >=4 %}
	{% set algorithm = bedMeshConfig.algorithm %}
	{% endif %}
	
	{% if enable_reference_index %}
	{% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm} relative_reference_index={referenceIndex}
	{% else %}
	BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} samples={probe_samples|int} algorithm={algorithm}
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% else %}
	BED_MESH_CALIBRATE_BASE
	{% endif %}
	{% endif %}
	M402

[gcode_macro TEST_SPEED]
gcode:
	{% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
	{% set iterations = params.ITERATIONS|default(5)|int %}
	{% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
	{% set bound = params.BOUND|default(20)|int %}
	{% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
	
		{% set x_min = printer.toolhead.axis_minimum.x + bound %}
		{% set x_max = printer.toolhead.axis_maximum.x - bound %}
		{% set y_min = printer.toolhead.axis_minimum.y + bound %}
		{% set y_max = printer.toolhead.axis_maximum.y - bound %}
		{% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
		{% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
		{% set x_center_min = x_center - (smallpatternsize/2) %}
		{% set x_center_max = x_center + (smallpatternsize/2) %}
		{% set y_center_min = y_center - (smallpatternsize/2) %}
		{% set y_center_max = y_center + (smallpatternsize/2) %}
	SAVE_GCODE_STATE NAME=TEST_SPEED
	{ action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
	SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel}
    G28
    G0 X115 Y115 Z30
    M400
    GET_POSITION
    
	G0 X{x_min+10} Y{y_min+10} Z{bound + 20} F{speed*60}

	{% for i in range(iterations) %}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_min+10} Y{y_min+10} F{speed*60}
			G0 X{x_min+10} Y{y_max-30} F{speed*60}
			G0 X{x_max-30} Y{y_max-30} F{speed*60}
			G0 X{x_max-30} Y{y_min+10} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_min} F{speed*60}
			G0 X{x_center_min} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_max} F{speed*60}
			G0 X{x_center_max} Y{y_center_min} F{speed*60}
	{% endfor %}
	SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel}
	RESTORE_GCODE_STATE NAME=TEST_SPEED
    G0 X115 Y115 Z30
    M400
    GET_POSITION

[gcode_macro G80]
gcode: 
	G28
	quad_gantry_level

[gcode_macro reset]
gcode: 
	RESTART

